{"version":3,"sources":["images sync /^/.//.*$","images/control_panel.png","images/polygon.png","images/tooltip.png","images/welcome.png","DropZone.js","LayerBar.js","utils/APIConnection.js","components/InputField.js","components/Operation.js","Sidebar.js","Map.js","Tutorial.js","App.js","utils/RandomColor.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","baseStyle","flex","display","flexDirection","alignItems","padding","paddingLeft","paddingRight","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","justifyContent","fontSize","activeStyle","acceptStyle","rejectStyle","Dropzone","addLayersToState","layers","enqueueSnackbar","onDropAccepted","useCallback","acceptedFiles","promises","file","filePromise","Promise","fr","FileReader","readAsText","onload","JSON","parse","result","push","all","then","files","variant","onDropRejected","rectedFiles","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","InputField","value","handleChange","type","onChange","Layer","layer","removeLayerFromState","handleMetaChange","useState","inputBox","setInputBox","name","layerName","setLayerName","key","className","selected","Fragment","ListItem","disableGutters","event","target","ClearOutlined","onClick","CheckOutlined","visibility","VisibilityOutlined","VisibilityOffOutlined","CreateOutlined","DeleteOutline","LayerBar","selectedLayersIndices","handleSelectedChange","HOST","getOperationFunction","inputData","operation","requestData","list","features","forEach","feature","concatGeoJSON","axios","post","response","data","catch","error","calculateSplitGeoJSON","console","log","newGeoJSON","concat","TextOnlyTooltip","withStyles","tooltip","Tooltip","Operation","icon","selectable","enabled","popoverText","setSelected","setValue","useStyles","makeStyles","theme","typography","spacing","width","boxShadow","border","toggleSelect","closeAndExectue","classes","React","anchorEl","setAnchorEl","open","Boolean","title","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","operationTexts","require","HeadLine","children","Sidebar","removeLayersFromState","setDraw","selectedLayers","filter","useSnackbar","layerOperation","useEffect","get","pingApi","List","disablePadding","draw","changeMode","draw_polygon","length","buffer","union","dissolve","split","intersection","bbox","symmetric_difference","DropZone","mapboxgl","accessToken","Map","setMap","mapContainer","useRef","addLayer","addSource","source","layout","paint","removeLayer","layerID","removeSource","getCurrentLayerIDs","getStyle","updateVisibility","getLayoutProperty","setLayoutProperty","updateSelectedOutline","setPaintProperty","initial_map","container","current","center","zoom","onCreation","getAll","deleteAll","on","addControl","resize","f","queryRenderedFeatures","point","getMode","initializeMap","currentLayers","removable","indexOf","addable","handleLayerUpdate","ref","el","tutorialContent","media","height","paddingTop","forward","backward","transform","actions","paddingBottom","content","RecipeReviewCard","step","setStep","visible","setVisibility","toggleVisibility","Card","CardMedia","image","CardActions","IconButton","CardHeader","titleTypographyProps","CardContent","component","detailed","i","Button","size","App","props","setLayers","MapboxDraw","displayControlsDefault","controls","line_string","polygon","newValues","newValue","Math","random","toString","slice","floor","getRandomColor","layerId","change","prevLayers","maxSnack","newLayers","Tutorial","ReactDOM","render","document","getElementById"],"mappings":"4sEAAA,IAAIA,EAAM,CACT,sBAAuB,IACvB,gBAAiB,IACjB,gBAAiB,IACjB,gBAAiB,KAIlB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oBCzBpBU,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,qJCIrCC,EAAY,CAChBC,KAAM,EACNC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,QAAS,OACTC,YAAa,OACbC,aAAc,OACdC,YAAa,EACbC,aAAc,EACdC,YAAa,QACbC,YAAa,QACbC,gBAAiB,UACjBC,MAAO,QACPC,QAAS,OACTC,eAAgB,eAChBC,SAAU,QAGNC,EAAc,CAClBL,gBAAiB,UACjBC,MAAO,SAGHK,EAAc,CAClBR,YAAa,SAGTS,EAAc,CAClBT,YAAa,QACbC,YAAa,SA4DAS,MAzDf,YAAkE,IAA9CC,EAA6C,EAA7CA,iBAAkBC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,gBACtCC,EAAiBC,uBACrB,SAACC,GACC,IADiB,EACbC,EAAW,GADE,cAEAD,GAFA,yBAERE,EAFQ,QAGXC,EAAc,IAAIC,SAAQ,SAACjC,GAC7B,IAAIkC,EAAK,IAAIC,WACbD,EAAGE,WAAWL,GACdG,EAAGG,OAAS,kBAAMrC,EAAQsC,KAAKC,MAAML,EAAGM,aAE1CV,EAASW,KAAKT,IANhB,2BAAiC,IAFhB,8BAWjBC,QAAQS,IAAIZ,GAAUa,MAAK,SAACC,GAC1BpB,EAAiBoB,EAAO,UACxBlB,EAAgB,qCAAsC,CAAEmB,QAAS,iBAIrE,CAACpB,IAGGqB,EAAiBlB,uBACrB,SAACmB,GACGrB,EAAgB,kEAAmE,CAAEmB,QAAS,YAGlG,CAACpB,IA3B4D,EAoC3DuB,YAAY,CAAEC,OAAQ,CAAC,QAAS,YAAatB,iBAAgBmB,mBAL/DI,EA/B6D,EA+B7DA,aACAC,EAhC6D,EAgC7DA,cACAC,EAjC6D,EAiC7DA,aACAC,EAlC6D,EAkC7DA,aACAC,EAnC6D,EAmC7DA,aAGIC,EAAQC,mBACZ,8BAAC,uCACIrD,GACCiD,EAAehC,EAAc,IAC7BiC,EAAehC,EAAc,IAC7BiC,EAAehC,EAAc,MAEnC,CAAC8B,EAAcE,EAAcD,IAG/B,OACE,wBAASH,EAAa,CAAEK,UACtB,0BAAWJ,KADb,gBAGE,kBAAC,IAAD,Q,wEC/EAM,EAAa,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,aAC1B,OAAO,2BAAOC,KAAK,OAAOF,MAAOA,EAAOG,SAAUF,KAG9CG,EAAQ,SAAC,GAIR,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,iBACI,EAC4BC,oBAAS,GADrC,mBACGC,EADH,KACaC,EADb,OAE8BF,mBAASH,EAAMM,MAF7C,mBAEGC,EAFH,KAEcC,EAFd,KASJ,OACE,yBACEC,IAAKT,EAAMxE,GACXkF,UACGV,EAAMW,SAEH,sBADA,cAILP,EACC,kBAAC,IAAMQ,SAAP,KACE,kBAACC,EAAA,EAAD,CAAUC,gBAAc,GACtB,kBAAC,EAAD,CAAYnB,MAAOY,EAAWX,aAjBf,SAACmB,GACxBP,EAAaO,EAAMC,OAAOrB,WAkBpB,kBAACsB,EAAA,EAAD,CACEC,QAAS,WACPV,EAAaR,EAAMM,MACnBD,GAAY,MAGhB,kBAACc,EAAA,EAAD,CACED,QAAS,WACPb,GAAY,GACZH,EAAiBF,EAAMxE,GAAI,OAAQ+E,OAKzC,kBAAC,IAAMK,SAAP,KACE,kBAACC,EAAA,EAAD,CACEC,gBAAc,EACdI,QAAS,WACPhB,EAAiBF,EAAMxE,GAAI,YAAawE,EAAMW,YAG/CX,EAAMM,MAEa,SAArBN,EAAMoB,WACL,kBAACC,EAAA,EAAD,CACEH,QAAS,kBAAMhB,EAAiBF,EAAMxE,GAAI,aAAc,WAG1D,kBAAC8F,EAAA,EAAD,CACEJ,QAAS,kBAAMhB,EAAiBF,EAAMxE,GAAI,aAAc,cAG5D,kBAAC+F,EAAA,EAAD,CAAgBL,QAAS,kBAAMb,GAAY,MAC3C,kBAACmB,EAAA,EAAD,CAAeN,QAAS,kBAAMjB,EAAqBD,EAAMxE,UAiCpDiG,EA1BE,SAAC,GAMX,IALL/D,EAKI,EALJA,OACAuC,EAII,EAJJA,qBACAyB,EAGI,EAHJA,sBACAC,EAEI,EAFJA,qBACAzB,EACI,EADJA,iBAEA,OACE,6BACGxC,GACCA,EAAOrC,KAAI,SAAC2E,GACV,OACE,kBAAC,EAAD,CACES,IAAKT,EAAMxE,GACXwE,MAAOA,EACPC,qBAAsBA,EACtByB,sBAAuBA,EACvBC,qBAAsBA,EACtBzB,iBAAkBA,S,mDChG1B0B,EAAO,yCA8BN,SAASC,EAAqBlE,EAAiBF,GACpD,OAAO,SAASqE,EAAWC,EAAWpC,GACpC,IAAIqC,EA9BR,SAAuBC,GAErB,IAAIC,EAAW,GAWf,OATAD,EAAKE,SAAQ,SAACC,GACZF,EAAQ,sBAAOE,EAAQF,UAAf,YAA4BA,OAGrB,CACfrC,KAAM,oBACNqC,SAAUA,GAoBQG,CAAcP,GAGhC,OAFInC,IAAOqC,EAAW,MAAYrC,GAE3B,WACL2C,IACCC,KAAKX,EAAOG,EAAWC,GACvBpD,MAAK,SAAC4D,GACY,yBAAdT,IAAsCA,EAAY,YACrDtE,EAAiB,CAAC+E,EAASC,MAAOV,GAClCpE,EAAgB,yBAA2BoE,EAAW,CAAEjD,QAAS,eAElE4D,OAAM,SAAUC,GACfhF,EAAgB,sBAAwBoE,EAAY,IAAMY,EAAO,CAAE7D,QAAS,eAM7E,SAAS8D,EAAsBnF,EAAkBqE,GACtD,OAAO,WAEL,IAAIpE,EAAS,GACbmF,QAAQC,IAAIhB,GACZA,EAAU,GAAGI,SAASC,SAAQ,SAACC,GAC7B,IAAIW,EAAa,CACflD,KAAM,oBACNqC,SAAU,CAACE,IAGb1E,EAASA,EAAOsF,OAAOD,MAEzBtF,EAAiBC,EAAQ,U,+CC5DdgC,EAJI,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,aACxB,OAAO,2BAAOC,KAAK,OAAOF,MAAOA,EAAOG,SAAUF,K,gBCShDqD,EAAkBC,YAAW,CACjCC,QAAS,CACP/F,SAAU,SAFU8F,CAIrBE,KAiGYC,EA/FG,SAAC,GAA+D,IAA7DnC,EAA4D,EAA5DA,QAASZ,EAAmD,EAAnDA,KAAMgD,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAAkB,EAC/CtD,oBAAS,GADsC,mBACxEQ,EADwE,KAC9D+C,EAD8D,OAErDvD,mBAAS,IAF4C,mBAExER,EAFwE,KAEjEgE,EAFiE,KAIzEC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,WAAY,CACVtH,QAASqH,EAAME,QAAQ,GACvBC,MAAO,IACP7G,SAAU,OACV8G,UAAW,MACXC,OAAQ,MACRpH,YAAa,QACbD,YAAa,QACbD,aAAc,WAIZuH,EAAe,WACnB,OAAOZ,EAAUE,GAAa/C,GAAY,MAOtC0D,EAAkB,SAAC1E,GACnB6D,IACFtC,EAAQvB,GACRyE,MAIEE,EAAUV,IAhC+D,EAiC/CW,IAAMpE,SAAS,MAjCgC,mBAiCxEqE,EAjCwE,KAiC9DC,EAjC8D,KA2C/E,IAAMC,EAAOC,QAAQH,GACfhJ,EAAKkJ,EAAO,iBAAmB,KAErC,OACE,kBAAC,IAAM9D,SAAP,KACID,EAYA,yBAAKD,UAAU,aACb,kBAACuC,EAAD,CAAiB2B,MAAO,oBACtB,kBAAC/D,EAAA,EAAD,CAAUC,gBAAc,GACtB,kBAAC,EAAD,CACEnB,MAAOA,EACPC,aAAc,SAAChE,GAAD,OAAO+H,EAAS/H,EAAEoF,OAAOrB,YAI7C,kBAACsB,EAAA,EAAD,CAAeC,QAASkD,IACxB,kBAACjD,EAAA,EAAD,CAAeD,QAAS,kBAAMmD,EAAgB1E,OArBhD,yBAAKe,UAAU,gBACb,kBAACG,EAAA,EAAD,CACEK,QAASqC,EAAaa,EAAe,kBA7BtCZ,EAAUtC,IAAY,MA8BrBR,UAAW8C,EAAU,YAAc,oBACnC1C,gBAAc,GAEbR,GAEFgD,GAAc,kBAAC,IAAD,CAAiBpC,QAtBxC,SAAqBH,GACnB0D,EAAY1D,EAAM8D,mBAqChB,kBAACC,EAAA,EAAD,CACEtJ,GAAIA,EACJkJ,KAAMA,EACNF,SAAUA,EACVO,QAtCN,WACEN,EAAY,OAsCRO,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAGd,kBAACE,EAAA,EAAD,CAAY1E,UAAW4D,EAAQP,YAC5BN,MC3FP4B,EAAiBC,EAAQ,KAChBC,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OAAO,yBAAK9E,UAAU,YAAY8E,IAqHrBC,EAlHC,SAAC,GAOV,IANLhI,EAMI,EANJA,iBACAiI,EAKI,EALJA,sBACAzF,EAII,EAJJA,qBACAvC,EAGI,EAHJA,OACAwC,EAEI,EAFJA,iBACAyF,EACI,EADJA,QAEIC,EAAiBlI,EAAOmI,QAAO,SAAC7F,GAAD,OAAWA,EAAMW,YAE5ChD,EAAoBmI,cAApBnI,gBAEFoI,EAAiBlE,EACrBlE,EACAF,GAcF,OALAuI,qBAAU,YHtBL,SAAiBrI,GACtB2E,IACK2D,IAAIrE,EAAO,QACXhD,MAAK,SAAC4D,GACL7E,EAAgB,sCAAuC,CAAEmB,QAAS,eAEnE4D,OAAM,SAAUC,GACfhF,EAAgB,iCAAkC,CAAEmB,QAAS,eGgBjEoH,CAAQvI,KAEP,IAGD,yBAAK+C,UAAU,WACb,kBAACyF,EAAA,EAAD,CAAMC,gBAAc,GAClB,kBAAC,EAAD,KACE,kBAACvF,EAAA,EAAD,CAAUC,gBAAc,GAAxB,kBAEF,kBAAC,EAAD,CACEI,QAAS,WACPyE,GAAQ,SAACU,GAAD,OAAUA,EAAKC,WAAW,oBAEpChG,KAAK,eACLkD,SAAS,EACTC,YAAa4B,EAAekB,eAE9B,kBAAC,EAAD,CACEjG,KAAK,SACLY,QA1BC,SAACvB,GACNoG,EAAeH,EAAgB,SAAUjG,EAAzCoG,IA0BIxC,YAAY,EACZC,QAASoC,EAAeY,QAAU,EAClC/C,YAAa4B,EAAeoB,SAE9B,kBAAC,EAAD,CACEnG,KAAK,QACLY,QAAS6E,EAAeH,EAAgB,SACxCpC,QAASoC,EAAeY,QAAU,EAClC/C,YAAa4B,EAAeqB,QAE9B,kBAAC,EAAD,CACEpG,KAAK,WACLY,QAAS6E,EAAeH,EAAgB,YACxCpC,QAAmC,IAA1BoC,EAAeY,OACxB/C,YAAa4B,EAAesB,WAG9B,kBAAC,EAAD,CACEzF,QAAS0B,EAAsBnF,EAAkBmI,GACjDtF,KAAK,QACLkD,QAASoC,EAAeY,QAAU,EAClC/C,YAAa4B,EAAeuB,QAE9B,kBAAC,EAAD,CACE1F,QAAS6E,EAAeH,EAAgB,gBACxCtF,KAAK,eACLkD,QAAmC,IAA1BoC,EAAeY,OACxB/C,YAAa4B,EAAewB,eAE9B,kBAAC,EAAD,CACE3F,QAAS6E,EAAeH,EAAgB,QACxCtF,KAAK,eACLkD,QAASoC,EAAeY,QAAU,EAClC/C,YAAa4B,EAAeyB,OAE9B,kBAAC,EAAD,CACE5F,QAAS6E,EAAeH,EAAgB,wBACxCtF,KAAK,uBACLkD,QAAmC,IAA1BoC,EAAeY,OACxB/C,YAAa4B,EAAe0B,uBAE9B,kBAAC,EAAD,CACE7F,QAASwE,EACTpF,KAAK,oBACLgD,KAAM,kBAAC,IAAD,MACNE,QAAS9F,EAAO8I,OAAS,IAE3B,kBAAC3F,EAAA,EAAD,CAAUC,gBAAc,GACtB,kBAACkG,EAAD,CACE9H,OAAO,SACPzB,iBAAkBA,EAClBC,OAAQA,EACRC,gBAAiBA,KAGrB,kBAAC,EAAD,KACE,kBAACkD,EAAA,EAAD,CAAUC,gBAAc,GAAxB,UACA,kBAAC,IAAD,OAEF,kBAAC,EAAD,CACEpD,OAAQA,EACRuC,qBAAsBA,EACtBC,iBAAkBA,O,2BC3H5B+G,KAASC,YACP,6FAEF,IAoJeC,GApJH,SAAC,GAMN,IALLzJ,EAKI,EALJA,OAEAD,GAGI,EAJJkE,qBAII,EAHJlE,kBACAyC,EAEI,EAFJA,iBACAmG,EACI,EADJA,KACI,EAEkBlG,mBAAS,MAF3B,mBAEG9E,EAFH,KAEQ+L,EAFR,KAGEC,EAAeC,iBAAO,MA2CtBC,EAAW,SAAC7J,GAChBA,EAAOyE,SAAQ,SAACnC,GACd3E,EAAImM,UAAUxH,EAAMxE,GAAI,CACtBqE,KAAM,UACN4C,KAAMzC,IAER3E,EAAIkM,SAAS,CACX/L,GAAIwE,EAAMxE,GACVqE,KAAM,OACN4H,OAAQzH,EAAMxE,GACdkM,OAAQ,CACNtG,WAAY,WAEduG,MAAO,CACL,aAAc3H,EAAM/C,MACpB,eAAgB,GAChB,qBAAsB+C,EAAM/C,aAM9B2K,EAAc,SAAClK,GACnBA,EAAOyE,SAAQ,SAAC0F,GACdxM,EAAIuM,YAAYC,GAChBxM,EAAIyM,aAAaD,OAIfE,EAAqB,SAAC1M,GAC1B,OAAOA,EACJ2M,WACAtK,OAAOmI,QAAO,SAAC7F,GACd,MACmB,cAAjBA,EAAMyH,QACS,eAAfzH,EAAMH,MACW,wBAAjBG,EAAMyH,QACW,uBAAjBzH,EAAMyH,UAGTpM,KAAI,SAAC2E,GAAD,OAAWA,EAAMxE,OAGpByM,EAAmB,SAACvK,GACxBA,EAAOyE,SAAQ,SAACnC,GACG3E,EAAI6M,kBAAkBlI,EAAMxE,GAAI,gBAC9BwE,EAAMoB,YACvB/F,EAAI8M,kBAAkBnI,EAAMxE,GAAI,aAAcwE,EAAMoB,gBAIpDgH,EAAwB,SAAC1K,GAC7BA,EAAOyE,SAAQ,SAACnC,GACdA,EAAMW,SACFtF,EAAIgN,iBAAiBrI,EAAMxE,GAAI,qBAAsB,WACrDH,EAAIgN,iBAAiBrI,EAAMxE,GAAI,qBAAsBwE,EAAM/C,WAoCnE,OAXA+I,qBAAU,WACH3K,GArHe,SAAC+L,EAAQC,GAC7B,IAAMiB,EAAc,IAAIrB,KAASE,IAAI,CACnCoB,UAAWlB,EAAamB,QACxBhJ,MAAO,qDACPiJ,OAAQ,CARA,MACA,OAQRC,KAPS,KAYX,SAASC,EAAW/M,GAClB,IAAI6G,EAAO4D,EAAKuC,SAChBnL,EAAiB,CAACgF,GAAO,YACzB4D,EAAKwC,YACLhG,QAAQC,IAAIuD,GAGdiC,EAAYQ,GAAG,QAAQ,WACrB1B,EAAOkB,GACPA,EAAYS,WAAW1C,GACvBiC,EAAYQ,GAAG,cAAeH,GAE9BL,EAAYU,YAGdV,EAAYQ,GAAG,SAAS,SAAClN,GACvB,IAAIqN,EAAIX,EAAYY,sBAAsBtN,EAAEuN,MAAO,CACjDzL,OAAQqK,EAAmBO,KAEzBW,EAAEzC,QAA6B,iBAAnBH,EAAK+C,WAEnBlJ,EAAiB+I,EAAE5N,KAAI,SAAC+G,GAAD,OAAaA,EAAQpC,MAAMxE,MAAI,GAAI,eAsFpD6N,CAAcjC,EAAQC,KAE/B,CAAChM,IAEJ2K,qBAAU,WACJ3K,GA3BoB,SAACqC,EAAQrC,GACjC,IAAMiO,EAAgBvB,EAAmB1M,GAEnCkO,EAAYD,EAAczD,QAAO,SAAU7F,GAE/C,OAA2D,IAApDtC,EAAOrC,KAAI,SAAC2E,GAAD,OAAWA,EAAMxE,MAAIgO,QAAQxJ,MAG3CyJ,EAAU/L,EAAOmI,QAAO,SAAU7F,GAEtC,OAA4C,IAArCsJ,EAAcE,QAAQxJ,EAAMxE,OAGjCiO,EAAQ,IAAIlC,EAASkC,GACrBF,EAAU,IAAI3B,EAAY2B,GAE9BtB,EAAiBvK,GACjB0K,EAAsB1K,GAUbgM,CAAkBhM,EAAQrC,GACnCwH,QAAQC,IAAI,MAAO,oBAElB,CAACpF,IAGF,yBAAKiM,IAAK,SAACC,GAAD,OAASvC,EAAamB,QAAUoB,GAAKlJ,UAAU,kB,uGC3IzDmJ,GAAkBvE,EAAQ,KAExB1B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCgG,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,QAAS,GACTC,SAAU,CACRC,UAAW,mBAEbC,QAAS,CACP9N,QAAS,OACTE,WAAY,SACZW,eAAgB,gBAChBkN,cAAe,OAEjBC,QAAS,CACPN,WAAY,MACZK,cAAe,WA8DJE,OA1Df,WACE,IAAMjG,EAAUV,KADU,EAEFzD,mBAAS,GAFP,mBAEnBqK,EAFmB,KAEbC,EAFa,OAGOtK,oBAAS,GAHhB,mBAGnBuK,EAHmB,KAGVC,EAHU,KAiBpBC,EAAmB,WACvBD,GAAeD,IAGjB,OAAOA,EACL,kBAACG,GAAA,EAAD,CAAMnK,UAAU,YACd,kBAACoK,GAAA,EAAD,CACEpK,UAAW4D,EAAQwF,MACnBiB,MAAOzF,OAAQ,KAAcuE,GAAgBW,GAAMO,SAErD,kBAACC,GAAA,EAAD,CAAatK,UAAW4D,EAAQ8F,SAC9B,kBAACa,GAAA,EAAD,CAAYvK,UAAW4D,EAAQ4F,SAAUhJ,QAjB9B,WACXsJ,EAAO,GAAK,GACdC,EAAQD,EAAO,KAgBX,kBAAC,KAAD,OAEF,kBAACU,GAAA,EAAD,CAAYtG,MAAOiF,GAAgBW,GAAM5F,MAAOuG,qBAAsB,CAACrM,QAAQ,QAC/E,kBAACmM,GAAA,EAAD,CAAYvK,UAAW4D,EAAQ2F,QAAS/I,QA3B7B,WACXsJ,EAAO,EAAIX,GAAgBrD,QAC7BiE,EAAQD,EAAO,KA0BX,kBAAC,KAAD,QAGJ,kBAACY,GAAA,EAAD,CAAa1K,UAAW4D,EAAQgG,SAC9B,kBAAClF,EAAA,EAAD,CAAYtG,QAAQ,QAAQ7B,MAAM,gBAAgBoO,UAAU,KACzDxB,GAAgBW,GAAMc,SAAS1E,MAAM,MAAMvL,KAAI,SAACkQ,EAAG9K,GAClD,OAAO,uBAAGA,IAAKA,GAAM8K,QAI3B,kBAACP,GAAA,EAAD,KACE,kBAACQ,GAAA,EAAD,CAAQC,KAAK,QAAQxO,MAAM,QAAQiE,QAAS0J,GAA5C,mBAMJ,kBAACC,GAAA,EAAD,CAAMnK,UAAU,gBACd,kBAAC8K,GAAA,EAAD,CAAQC,KAAK,QAAQvK,QAAS0J,GAA9B,mBCISc,GAlFH,SAACC,GAAW,IAAD,EACOxL,mBAAS,IADhB,mBACdzC,EADc,KACNkO,EADM,OAGGzL,mBACtB,IAAI0L,KAAW,CACbC,wBAAwB,EACxBC,SAAU,CACR5C,OAAO,EACP6C,aAAa,EACbC,SAAS,MATM,mBAGd5F,EAHc,KAGRV,EAHQ,KAcflI,EAAmB,SAACmO,GACxB,OAAO,SAACM,EAAWnK,GACjBmK,EAAU/J,SAAQ,SAACgK,GACjBA,EAAQ,GAASpK,EAAY,IAAMqK,KAAKC,SAASC,SAAS,IAAIC,MAAM,GACpEJ,EAAQ,KACNpK,EAAY,IAAMqK,KAAKC,SAASC,SAAS,IAAIC,MAAM,GACrDJ,EAAQ,MC5BT,WAGH,IAFA,IACIlP,EAAQ,IACHsO,EAAI,EAAGA,EAAI,EAAGA,IACrBtO,GAHY,mBAGKmP,KAAKI,MAAsB,GAAhBJ,KAAKC,WAEnC,OAAOpP,EDsBiBwP,MAEtBb,GAAU,SAAClO,GAAD,4BAAgBA,GAAhB,YAA2BwO,SAInChM,EAAmB,SAAC0L,GACxB,OAAO,SAACc,EAASjM,EAAKkM,GAShBf,EARHe,GAAkB,aAARlM,EAQG,SAACmM,GAAD,OACRA,EAAWvR,KAAI,SAAC2E,GAAD,OACbA,EAAMxE,KAAOkR,EAAb,2BAA4B1M,GAA5B,kBAAoCS,EAAMkM,IAAW3M,MAT/C,SAAC4M,GAAD,OACRA,EAAWvR,KAAI,SAAC2E,GAAD,OACbA,EAAMxE,KAAOkR,EAAb,2BACS1M,GADT,kBACiBS,GAAOT,EAAMW,WAC1BX,SA0BhB,OACE,kBAAC,IAAD,CAAkB6M,SAAU,GAC1B,6BACE,kBAAC,EAAD,CACEpP,iBAAkBA,EAAiBmO,GACnClG,sBApBsB,SAACkG,GAC7B,OAAO,WACLA,EAAU,KAkBiBlG,CAAsBkG,GAC7C3L,qBAfqB,SAAC2L,EAAWlO,GACvC,OAAO,SAACmK,GACN,IAAIiF,EAAYpP,EAAOmI,QAAO,SAAC7F,GAC7B,OAAOA,EAAMxE,KAAOqM,KAEtB+D,EAAUkB,IAUgB7M,CAAqB2L,EAAWlO,GACtDA,OAAQA,EACRwC,iBAAkBA,EAAiB0L,GACnCjG,QAASA,IAEX,kBAAC,GAAD,CACEjI,OAAQA,EACRD,iBAAkBA,EAAiBmO,GACnC1L,iBAAkBA,EAAiB0L,GACnCvF,KAAMA,IAER,kBAAC0G,GAAD,SEhFRC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,S","file":"static/js/main.2db321b9.chunk.js","sourcesContent":["var map = {\n\t\"./control_panel.png\": 139,\n\t\"./polygon.png\": 140,\n\t\"./tooltip.png\": 141,\n\t\"./welcome.png\": 142\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 138;","module.exports = __webpack_public_path__ + \"static/media/control_panel.99a5a2cd.png\";","module.exports = __webpack_public_path__ + \"static/media/polygon.6b958f71.png\";","module.exports = __webpack_public_path__ + \"static/media/tooltip.d25c112d.png\";","module.exports = __webpack_public_path__ + \"static/media/welcome.b8da382a.png\";","import React, { useCallback, useMemo } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport PublishIconLarge from \"@material-ui/icons/Publish\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  borderWidth: 2,\n  borderRadius: 4,\n  borderColor: \"black\",\n  borderStyle: \"solid\",\n  backgroundColor: \"#43a047\",\n  color: \"white\",\n  outline: \"none\",\n  justifyContent: \"space-around\",\n  fontSize: \"18px\",\n};\n\nconst activeStyle = {\n  backgroundColor: \"#3a3a3a\",\n  color: \"white\",\n};\n\nconst acceptStyle = {\n  borderColor: \"white\",\n};\n\nconst rejectStyle = {\n  borderColor: \"white\",\n  borderStyle: \"solid\"\n};\n\nfunction Dropzone({ addLayersToState, layers, enqueueSnackbar }) {\n  const onDropAccepted = useCallback(\n    (acceptedFiles) => {\n      let promises = [];\n      for (let file of acceptedFiles) {\n        let filePromise = new Promise((resolve) => {\n          let fr = new FileReader();\n          fr.readAsText(file);\n          fr.onload = () => resolve(JSON.parse(fr.result));\n        });\n        promises.push(filePromise);\n      }\n\n      Promise.all(promises).then((files) => {\n        addLayersToState(files, \"upload\");\n        enqueueSnackbar(\"Successfully added layers to state\", { variant: \"success\"})\n      });\n    },\n    //eslint-disable-next-line\n    [layers]\n  );\n\n  const onDropRejected = useCallback(\n    (rectedFiles) => {\n        enqueueSnackbar(\"Error adding selected layers, try a valid geojson- or json-file\", { variant: \"error\"})\n    },\n    //eslint-disable-next-line\n    [layers]\n  );\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({ accept: [\".json\", \".geojson\"], onDropAccepted, onDropRejected});\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  return (\n    <div {...getRootProps({ style })}>\n      <input {...getInputProps()} />\n      Upload Layers\n      <PublishIconLarge />\n    </div>\n  );\n}\n\nexport default Dropzone;\n","import { ClearOutlined, CheckOutlined } from \"@material-ui/icons\";\nimport { ListItem } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport {\n  DeleteOutline,\n  CreateOutlined,\n  VisibilityOutlined,\n  VisibilityOffOutlined,\n} from \"@material-ui/icons\";\n\nconst InputField = ({value, handleChange}) => {\n  return <input type=\"text\" value={value} onChange={handleChange}></input>;\n};\n\nconst Layer = ({\n  layer,\n  removeLayerFromState,\n  handleMetaChange,\n}) => {\n  const [inputBox, setInputBox] = useState(false);\n  const [layerName, setLayerName] = useState(layer.name)\n\n  const handleNameChange = (event) => {\n    setLayerName(event.target.value)\n  }\n\n\n  return (\n    <div\n      key={layer.id}\n      className={\n        !layer.selected\n          ? \"layer-item\"\n          : \"layer-item-selected\"\n      }\n    >\n      {inputBox ? (\n        <React.Fragment>\n          <ListItem disableGutters>\n            <InputField value={layerName} handleChange={handleNameChange}/>\n          </ListItem>\n          <ClearOutlined\n            onClick={() => {\n              setLayerName(layer.name)\n              setInputBox(false);\n            }}\n          />\n          <CheckOutlined\n            onClick={() => {\n              setInputBox(false);\n              handleMetaChange(layer.id, \"name\", layerName)}\n            }\n          />\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <ListItem\n            disableGutters\n            onClick={() => {\n              handleMetaChange(layer.id, \"selected\", !layer.selected);\n            }}\n          >\n            {layer.name}\n          </ListItem>\n          {layer.visibility !== \"none\" ? (\n            <VisibilityOutlined\n              onClick={() => handleMetaChange(layer.id, \"visibility\", \"none\")}\n            />\n          ) : (\n            <VisibilityOffOutlined\n              onClick={() => handleMetaChange(layer.id, \"visibility\", \"visible\")}\n            ></VisibilityOffOutlined>\n          )}\n          <CreateOutlined onClick={() => setInputBox(true)} />\n          <DeleteOutline onClick={() => removeLayerFromState(layer.id)} />\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nconst LayerBar = ({\n  layers,\n  removeLayerFromState,\n  selectedLayersIndices,\n  handleSelectedChange,\n  handleMetaChange,\n}) => {\n  return (\n    <div>\n      {layers &&\n        layers.map((layer) => {\n          return (\n            <Layer\n              key={layer.id}\n              layer={layer}\n              removeLayerFromState={removeLayerFromState}\n              selectedLayersIndices={selectedLayersIndices}\n              handleSelectedChange={handleSelectedChange}\n              handleMetaChange={handleMetaChange}\n            />\n          );\n        })}\n    </div>\n  );\n};\n\nexport default LayerBar;\n","import axios from \"axios\";\n\n//const HOST = \"http://localhost:5000/api/\";\nconst HOST = \"https://tba4251-api.herokuapp.com/api/\"\n\nfunction concatGeoJSON(list) {\n  // used to combine features into one geojson for backend processing\n  let features = [];\n\n  list.forEach((feature) => {\n    features = [...feature.features, ...features];\n  });\n\n  let newGeoJSON = {\n    type: \"FeatureCollection\",\n    features: features,\n  };\n\n  return newGeoJSON;\n}\n\nexport function pingApi(enqueueSnackbar){\n  axios\n      .get(HOST + \"ping\")\n      .then((response) => {\n        enqueueSnackbar(\"Successfully connected with backend\", { variant: \"success\"})\n      })\n      .catch(function (error) {\n        enqueueSnackbar(\"Failed to connect with backend\", { variant: \"success\"})\n        // manipulate the error response here\n      });\n}\n\nexport function getOperationFunction(enqueueSnackbar, addLayersToState) {\n  return function(inputData, operation, value){\n    let requestData = concatGeoJSON(inputData);\n    if (value) requestData[\"value\"] = value;\n\n    return function () {\n      axios\n      .post(HOST + operation, requestData)\n      .then((response) => {\n        if(operation === \"symmetric_difference\") operation = \"sym_diff\"\n        addLayersToState([response.data], operation);\n        enqueueSnackbar(\"Successfully computed \" + operation, { variant: \"success\"})\n      })\n      .catch(function (error) {\n        enqueueSnackbar(\"Failed to execute  \" + operation + \" \" + error, { variant: \"error\"})\n        // manipulate the error response here\n      });\n  };\n  }\n}\nexport function calculateSplitGeoJSON(addLayersToState, inputData) {\n  return function () {\n    // used to combine features into one geojson for backend processing\n    let layers = [];\n    console.log(inputData)\n    inputData[0].features.forEach((feature) => {\n      let newGeoJSON = {\n        type: \"FeatureCollection\",\n        features: [feature],\n      };\n\n      layers = layers.concat(newGeoJSON);\n    });\n    addLayersToState(layers, \"split\");\n  };\n}\n","import React from 'react'\n\nconst InputField = ({value, handleChange}) => {\n    return <input type=\"text\" value={value} onChange={handleChange}></input>;\n  };\n\nexport default InputField","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutlineOutlined\";\n\nimport InputField from \"./InputField\";\nimport { ClearOutlined, CheckOutlined } from \"@material-ui/icons\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Tooltip } from \"@material-ui/core\";\n\nconst TextOnlyTooltip = withStyles({\n  tooltip: {\n    fontSize: \"13px\",\n  },\n})(Tooltip);\n\nconst Operation = ({ onClick, name, icon, selectable, enabled, popoverText }) => {\n  const [selected, setSelected] = useState(false);\n  const [value, setValue] = useState(10);\n\n  const useStyles = makeStyles((theme) => ({\n    typography: {\n      padding: theme.spacing(2),\n      width: 200,\n      fontSize: \"13px\",\n      boxShadow: \"0px\",\n      border: \"1px\",\n      borderStyle: \"solid\",\n      borderColor: \"black\",\n      borderRadius: \"4px\"\n    },\n  }));\n\n  const toggleSelect = () => {\n    return enabled ? setSelected(!selected) : null;\n  };\n\n  const Execute = () => {\n    return enabled ? onClick() : null;\n  };\n\n  const closeAndExectue = (value) => {\n    if (enabled) {\n      onClick(value);\n      toggleSelect();\n    }\n  };\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : null;\n\n  return (\n    <React.Fragment>\n      {!selected ? (\n        <div className=\"operationdiv\">\n          <ListItem\n            onClick={selectable ? toggleSelect : () => Execute()}\n            className={enabled ? \"operation\" : \"disabledOperation\"}\n            disableGutters\n          >\n            {name}\n          </ListItem>\n          {icon ? icon : <HelpOutlineIcon onClick={handleClick} />}\n        </div>\n      ) : (\n        <div className=\"operation\">\n          <TextOnlyTooltip title={\"Enter buffer [m]\"}>\n            <ListItem disableGutters>\n              <InputField\n                value={value}\n                handleChange={(e) => setValue(e.target.value)}\n              />\n            </ListItem>\n          </TextOnlyTooltip>\n          <ClearOutlined onClick={toggleSelect} />\n          <CheckOutlined onClick={() => closeAndExectue(value)} />\n        </div>\n      )}\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Typography className={classes.typography}>\n          {popoverText}\n        </Typography>\n      </Popover>\n    </React.Fragment>\n  );\n};\n\nexport default Operation;\n","import React, { useEffect } from \"react\";\nimport DropZone from \"./DropZone\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport LayerBar from \"./LayerBar\";\nimport LayersIcon from \"@material-ui/icons/Layers\";\nimport ClearOutlinedIcon from \"@material-ui/icons/ClearOutlined\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  calculateSplitGeoJSON,\n  getOperationFunction,\n  pingApi,\n} from \"./utils/APIConnection\";\nimport Operation from \"./components/Operation\"\n\nvar operationTexts = require('./data/operations.json');\nexport const HeadLine = ({ children }) => {\n  return <div className=\"headLine\">{children}</div>;\n};\n\nconst Sidebar = ({\n  addLayersToState,\n  removeLayersFromState,\n  removeLayerFromState,\n  layers,\n  handleMetaChange,\n  setDraw,\n}) => {\n  var selectedLayers = layers.filter((layer) => layer.selected);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const layerOperation = getOperationFunction(\n    enqueueSnackbar,\n    addLayersToState\n  );\n\n  const onClickBuffer = () => {\n    return (value) => {\n      layerOperation(selectedLayers, \"buffer\", value)();\n    };\n  };\n\n  useEffect(() => {\n    pingApi(enqueueSnackbar);\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"sidebar\">\n      <List disablePadding>\n        <HeadLine>\n          <ListItem disableGutters>Control Panel</ListItem>\n        </HeadLine>\n        <Operation\n          onClick={() => {\n            setDraw((draw) => draw.changeMode(\"draw_polygon\"));\n          }}\n          name=\"Draw Polygon\"\n          enabled={true}\n          popoverText={operationTexts.draw_polygon}\n        />\n        <Operation\n          name=\"Buffer\"\n          onClick={onClickBuffer()}\n          selectable={true}\n          enabled={selectedLayers.length >= 1}\n          popoverText={operationTexts.buffer}\n        />\n        <Operation\n          name=\"Union\"\n          onClick={layerOperation(selectedLayers, \"union\")}\n          enabled={selectedLayers.length >= 2}\n          popoverText={operationTexts.union}\n        />\n        <Operation\n          name=\"Dissolve\"\n          onClick={layerOperation(selectedLayers, \"dissolve\")}\n          enabled={selectedLayers.length === 1}\n          popoverText={operationTexts.dissolve}\n        ></Operation>\n\n        <Operation\n          onClick={calculateSplitGeoJSON(addLayersToState, selectedLayers)}\n          name=\"Split\"\n          enabled={selectedLayers.length >= 1}\n          popoverText={operationTexts.split}\n        />\n        <Operation\n          onClick={layerOperation(selectedLayers, \"intersection\")}\n          name=\"Intersection\"\n          enabled={selectedLayers.length === 2}\n          popoverText={operationTexts.intersection}\n        />\n        <Operation\n          onClick={layerOperation(selectedLayers, \"bbox\")}\n          name=\"Bounding Box\"\n          enabled={selectedLayers.length >= 1}\n          popoverText={operationTexts.bbox}\n        />\n        <Operation\n          onClick={layerOperation(selectedLayers, \"symmetric_difference\")}\n          name=\"Symmetric Difference\"\n          enabled={selectedLayers.length === 2}\n          popoverText={operationTexts.symmetric_difference}\n        />\n        <Operation\n          onClick={removeLayersFromState}\n          name=\"Remove All Layers\"\n          icon={<ClearOutlinedIcon />}\n          enabled={layers.length > 0}\n        />\n        <ListItem disableGutters>\n          <DropZone\n            accept=\"*.json\"\n            addLayersToState={addLayersToState}\n            layers={layers}\n            enqueueSnackbar={enqueueSnackbar}\n          />\n        </ListItem>\n        <HeadLine>\n          <ListItem disableGutters>Layers</ListItem>\n          <LayersIcon />\n        </HeadLine>\n        <LayerBar\n          layers={layers}\n          removeLayerFromState={removeLayerFromState}\n          handleMetaChange={handleMetaChange}\n        />\n      </List>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoidG9yc3RlaW4iLCJhIjoiY2s3YWJkdzk3MDU1bjNncnd0dWExN292YiJ9.te0K0gwI11dUd2qZs6FQ0g\";\n\nconst Map = ({\n  layers,\n  handleSelectedChange,\n  addLayersToState,\n  handleMetaChange,\n  draw,\n}) => {\n  // react hooks for storing the map\n  const [map, setMap] = useState(null);\n  const mapContainer = useRef(null);\n\n  // initial coordinates for Trondheim\n  const lng = 10.38;\n  const lat = 63.43;\n  const zoom = 13;\n\n  const initializeMap = (setMap, mapContainer) => {\n    const initial_map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/torstein/ckhxghcb708qg19mtz7urlkdx\", // stylesheet location\"\n      center: [lng, lat],\n      zoom: zoom,\n    });\n    //initial_map.on(\"draw.delete\", updateArea);\n    //initial_map.on(\"draw.update\", updateArea);\n\n    function onCreation(e) {\n      var data = draw.getAll();\n      addLayersToState([data], \"drawTool\");\n      draw.deleteAll();\n      console.log(draw);\n    }\n\n    initial_map.on(\"load\", () => {\n      setMap(initial_map);\n      initial_map.addControl(draw);\n      initial_map.on(\"draw.create\", onCreation);\n\n      initial_map.resize();\n    });\n\n    initial_map.on(\"click\", (e) => {\n      let f = initial_map.queryRenderedFeatures(e.point, {\n        layers: getCurrentLayerIDs(initial_map),\n      });\n      if (f.length && draw.getMode() !== \"draw_polygon\") {\n        // if you have clicked a number of layers\n        handleMetaChange(f.map((feature) => feature.layer.id)[0], \"selected\");\n      }\n    });\n  };\n\n  const addLayer = (layers) => {\n    layers.forEach((layer) => {\n      map.addSource(layer.id, {\n        type: \"geojson\",\n        data: layer,\n      });\n      map.addLayer({\n        id: layer.id,\n        type: \"fill\",\n        source: layer.id,\n        layout: {\n          visibility: \"visible\",\n        },\n        paint: {\n          \"fill-color\": layer.color,\n          \"fill-opacity\": 0.7,\n          \"fill-outline-color\": layer.color,\n        },\n      });\n    });\n  };\n\n  const removeLayer = (layers) => {\n    layers.forEach((layerID) => {\n      map.removeLayer(layerID);\n      map.removeSource(layerID);\n    });\n  };\n\n  const getCurrentLayerIDs = (map) => {\n    return map\n      .getStyle()\n      .layers.filter((layer) => {\n        return (\n          layer.source !== \"composite\" &&\n          layer.type !== \"background\" &&\n          layer.source !== \"mapbox-gl-draw-cold\" &&\n          layer.source !== \"mapbox-gl-draw-hot\"\n        );\n      })\n      .map((layer) => layer.id);\n  };\n\n  const updateVisibility = (layers) => {\n    layers.forEach((layer) => {\n      var visibility = map.getLayoutProperty(layer.id, \"visibility\");\n      if (visibility !== layer.visibility)\n        map.setLayoutProperty(layer.id, \"visibility\", layer.visibility);\n    });\n  };\n\n  const updateSelectedOutline = (layers) => {\n    layers.forEach((layer) => {\n      layer.selected\n        ? map.setPaintProperty(layer.id, \"fill-outline-color\", \"#000000\")\n        : map.setPaintProperty(layer.id, \"fill-outline-color\", layer.color);\n    });\n  };\n\n  const handleLayerUpdate = (layers, map) => {\n    const currentLayers = getCurrentLayerIDs(map);\n\n    const removable = currentLayers.filter(function (layer) {\n      //get the index for layers that have been deleted in the state\n      return layers.map((layer) => layer.id).indexOf(layer) === -1;\n    });\n\n    const addable = layers.filter(function (layer) {\n      //get the index for layers that have been added to the state\n      return currentLayers.indexOf(layer.id) === -1;\n    });\n\n    if (addable[0]) addLayer(addable);\n    if (removable[0]) removeLayer(removable);\n\n    updateVisibility(layers);\n    updateSelectedOutline(layers);\n  };\n\n  // render map on initial load\n  useEffect(() => {\n    if (!map) initializeMap(setMap, mapContainer);\n    // eslint-disable-next-line\n  }, [map]);\n\n  useEffect(() => {\n    if (map) handleLayerUpdate(layers, map);\n    console.log(\"Map\", \"Layers handled\");\n    // eslint-disable-next-line\n  }, [layers]);\n\n  return (\n    <div ref={(el) => (mapContainer.current = el)} className=\"mapContainer\" />\n  );\n};\n\nexport default Map;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ArrowForward from \"@material-ui/icons/ArrowForwardIosOutlined\";\n\nvar tutorialContent = require('./data/tutorial.json');\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  forward: {},\n  backward: {\n    transform: \"rotate(-180deg)\",\n  },\n  actions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingBottom: \"0px\"\n  },\n  content: {\n    paddingTop: \"0px\",\n    paddingBottom: \"0px\"\n  }\n}));\n\nfunction RecipeReviewCard() {\n  const classes = useStyles();\n  const [step, setStep] = useState(0);\n  const [visible, setVisibility] = useState(false);\n\n  const nextStep = () => {\n    if (step + 1 < tutorialContent.length) {\n      setStep(step + 1);\n    }\n  };\n\n  const prevStep = () => {\n    if (step - 1 >= 0) {\n      setStep(step - 1);\n    }\n  };\n\n  const toggleVisibility = () => {\n    setVisibility(!visible);\n  };\n\n  return visible ? (\n    <Card className=\"tutorial\">\n      <CardMedia\n        className={classes.media}\n        image={require(\"./images/\" + tutorialContent[step].image)}\n      />\n      <CardActions className={classes.actions}>\n        <IconButton className={classes.backward} onClick={prevStep}>\n          <ArrowForward />\n        </IconButton>\n        <CardHeader title={tutorialContent[step].title} titleTypographyProps={{variant:'h6' }}/>\n        <IconButton className={classes.forward} onClick={nextStep}>\n          <ArrowForward />\n        </IconButton>\n      </CardActions>\n      <CardContent className={classes.content}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {tutorialContent[step].detailed.split(\"\\n\").map((i, key) => {\n            return <p key={key}>{i}</p>;\n          })}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"black\" onClick={toggleVisibility}>\n          Hide tutorial\n        </Button>\n      </CardActions>\n    </Card>\n  ) : (\n    <Card className=\"showtutorial\">\n      <Button size=\"large\" onClick={toggleVisibility}>\n        Show Tutorial\n      </Button>\n    </Card>\n  );\n}\n\nexport default RecipeReviewCard;\n","import React, { useState } from \"react\";\nimport { SnackbarProvider } from \"notistack\";\nimport Sidebar from \"./Sidebar\";\nimport Map from \"./Map\";\nimport { getRandomColor } from \"./utils/RandomColor\";\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport Tutorial from \"./Tutorial\";\n\nconst App = (props) => {\n  const [layers, setLayers] = useState([]);\n\n  const [draw, setDraw] = useState(\n    new MapboxDraw({\n      displayControlsDefault: false,\n      controls: {\n        point: false,\n        line_string: false,\n        polygon: false,\n      },\n    })\n  );\n\n  const addLayersToState = (setLayers) => {\n    return (newValues, operation) => {\n      newValues.forEach((newValue) => {\n        newValue[\"id\"] = operation + \"_\" + Math.random().toString(36).slice(2); //generates random name for the layer\n        newValue[\"name\"] =\n          operation + \"_\" + Math.random().toString(36).slice(2);\n        newValue[\"color\"] = getRandomColor(); //generates random color\n      });\n      setLayers((layers) => [...layers, ...newValues]);\n    };\n  };\n\n  const handleMetaChange = (setLayers) => {\n    return (layerId, key, change) => {\n      !change && key === \"selected\"\n        ? setLayers((prevLayers) =>\n            prevLayers.map((layer) =>\n              layer.id === layerId\n                ? { ...layer, [key]: !layer.selected }\n                : layer\n            )\n          )\n        : setLayers((prevLayers) =>\n            prevLayers.map((layer) =>\n              layer.id === layerId ? { ...layer, [key]: change } : layer\n            )\n          );\n    };\n  };\n\n  const removeLayersFromState = (setLayers) => {\n    return () => {\n      setLayers([]);\n    };\n  };\n\n  const removeLayerFromState = (setLayers, layers) => {\n    return (layerID) => {\n      var newLayers = layers.filter((layer) => {\n        return layer.id !== layerID;\n      });\n      setLayers(newLayers);\n    };\n  };\n\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <div>\n        <Sidebar\n          addLayersToState={addLayersToState(setLayers)}\n          removeLayersFromState={removeLayersFromState(setLayers)}\n          removeLayerFromState={removeLayerFromState(setLayers, layers)}\n          layers={layers}\n          handleMetaChange={handleMetaChange(setLayers)}\n          setDraw={setDraw}\n        />\n        <Map\n          layers={layers}\n          addLayersToState={addLayersToState(setLayers)}\n          handleMetaChange={handleMetaChange(setLayers)}\n          draw={draw}\n        />\n        <Tutorial />\n      </div>\n    </SnackbarProvider>\n  );\n};\n\nexport default App;\n","export function getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('app'));"],"sourceRoot":""}